Kriteria Project 

Kriteria 1 - Web Server dapat menyimpan catatan

Kriteria pertama adalah web server dapat menyimpan catatan yang ditambahkan melalui aplikasi web. 
Tenang, untuk memenuhi kriteria ini Anda tidak perlu menggunakan database. Cukup simpan pada memory server dalam bentuk array JavaScript.

Berikut struktur dari objek catatan yang perlu disimpan oleh server:
{
 id: string,
 title: string,
 createdAt: string,
 updatedAt: string,
 tags: array of string,
 body: string,
},

Berikut contoh data nyatanya:
{
 id: 'notes-V1StGXR8_Z5jdHi6B-myT',
 title: 'Sejarah JavaScript',
 createdAt: '2020-12-23T23:00:09.686Z',
 updatedAt: '2020-12-23T23:00:09.686Z',
 tags: ['NodeJS', 'JavaScript'],
 body: 'JavaScript pertama kali dikembangkan oleh Brendan Eich dari Netscape di bawah nama Mocha, yang nantinya namanya diganti menjadi LiveScript, dan akhirnya menjadi JavaScript. Navigator sebelumnya telah mendukung Java untuk lebih bisa dimanfaatkan para pemrogram yang non-Java.',
},

Dalam menyimpan atau menambahkan notes, 
client akan mengirimkan permintaan ke path dan method tersebut dengan membawa data JSON berikut pada request body:
{
 "title": "Judul Catatan",
 "tags": ["Tag 1", "Tag 2"],
 "body": "Konten catatan"
}

Untuk properti id, createdAt, dan updatedAt harus diolah di sisi server,
jadi client tidak akan mengirimkan itu. Server harus memastikan properti id selalu unik.

Jika permintaan client berhasil dilakukan, 
respons dari server harus memiliki status code 201 (created) dan 
mengembalikan data dalam bentuk JSON dengan format berikut:

{
  "status": "success",
  "message": "Catatan berhasil ditambahkan",
  "data": {
    "noteId": "V09YExygSUYogwWJ"
  }
}

Nilai dari properti noteId diambil dari properti id yang dibuat secara unik. 

Bila permintaan gagal dilakukan, berikan status code 500 dan kembalikan dengan data JSON dengan format berikut:

{
  "status": "error",
  "message": "Catatan gagal untuk ditambahkan"
}

Kriteria 2 - Web Server dapat menampilkan catatan

Kriteria selanjutnya adalah web server dapat menampilkan catatan. 
Kriteria ini mengharuskan web server untuk mengirimkan seluruh atau secara spesifik data notes yang disimpan.

Ketika client melakukan permintaan pada path ‘/notes’ dengan method ‘GET’, 
maka server harus mengembalikan status code 200 (ok) serta seluruh data notes dalam bentuk array menggunakan JSON. 
Contohnya seperti ini:
{
  "status": "success",
  "data": {
    "notes": [
      {
        "id":"notes-V1StGXR8_Z5jdHi6B-myT",
        "title":"Catatan 1",
        "createdAt":"2020-12-23T23:00:09.686Z",
        "updatedAt":"2020-12-23T23:00:09.686Z",
        "tags":[
          "Tag 1",
          "Tag 2"
        ],
        "body":"Isi dari catatan 1"
      },
      {
        "id":"notes-V1StGXR8_98apmLk3mm1",
        "title":"Catatan 2",
        "createdAt":"2020-12-23T23:00:09.686Z",
        "updatedAt":"2020-12-23T23:00:09.686Z",
        "tags":[
          "Tag 1",
          "Tag 2"
        ],
        "body":"Isi dari catatan 2"
      }
    ]
  }
}

Jika belum ada catatan satu pun pada array,
server bisa mengembalikan data notes dengan nilai array kosong seperti ini:
{
  "status": "success",
  "data": {
    "notes": []
  }
}

Selain itu, 
client juga bisa melakukan permintaan untuk mendapatkan catatan secara spesifik 
menggunakan id melalui path ‘/notes/{id}’ dengan method ‘GET’. 

{
  "status": "success",
  "data": {
    "note": {
      "id":"notes-V1StGXR8_Z5jdHi6B-myT",
      "title":"Catatan 1",
      "createdAt":"2020-12-23T23:00:09.686Z",
      "updatedAt":"2020-12-23T23:00:09.686Z",
      "tags":[
        "Tag 1",
        "Tag 2"
      ],
      "body":"Isi dari catatan 1"
    }
  }
}
Bila client melampirkan id catatan yang tidak ditemukan, 
server harus merespons dengan status code 404, dan data dalam bentuk JSON seperti ini:
{
  "status": "fail",
  "message": "Catatan tidak ditemukan"
}
